{"version":3,"sources":["components/layouts/Header.js","components/layouts/MenuHeader.js","components/display/Table.js","components/display/StackedHorizontalBarChart.js","constants/tableConfig.js","constants/chartConfig.js","components/pages/OverallPage.js","components/pages/IndividualServicePage.js","components/pages/ServicePage.js","components/pages/ContentPage.js","App.js","serviceWorker.js","utils/iconUtils.js","index.js"],"names":["Header","react_default","a","createElement","className","Navbar","expand","Brand","Fragment","Toggle","aria-controls","Collapse","id","Nav","lib","to","NavItem","MenuHeader","_ref","name","icon","index_es","Table","ref","_this2","this","_this$props","props","_this$props$data","data","_this$props$config","config","length","react_csv","title","react_tabulator_lib","columns","options","data-custom-attr","Component","StackedHorizontalBarChart","es6","width","height","layout","stackOffset","margin","top","right","left","bottom","strokeDasharray","type","dataKey","xaxis","yaxis","lowerbar","stackId","fill","upperbar","OverallTableConfig","field","formatter","movableRows","pagination","paginationSize","ServiceAveragesTableConfig","OperationsAveragesTableConfig","ChartConfig","OverallPage","_props$data","overallData","overallChartData","serviceAverages","layouts_MenuHeader","display_Table","display_StackedHorizontalBarChart","IndividualServicePage","testName","success","failure","operation","countOperation","countRequests","countSuccess","countFailure","countSLAFailure","avgTime","highTime","lowTime","ServicePage","pages_IndividualServicePage","ContentPage","pages_OverallPage","pages_ServicePage","appData","dev","requestId","service","endpoint","time","result","timeSLA","errorCode","errorMessage","sit","uat","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","react_router_dom","layouts_Header","react_router","path","exact","render","pages_ContentPage","assign","Boolean","window","location","hostname","match","library","add","faColumns","faCogs","faHashtag","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.33ae12e0.chunk.js","sourcesContent":["import React from 'react';\nimport { Nav, Navbar, NavItem } from 'react-bootstrap';\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport '../../styles/Header.css';\n\nconst Header = () =>  {\n\t\n\treturn (\n\t\t\t<header className=\"header\">\n\t\t      <Navbar expand=\"lg\">\n\t\t        <Navbar.Brand>\n\t\t         \t<span className=\"app-name\">ILGate Postman WebUI</span>\n\t\t        </Navbar.Brand>\n\t\t           \t<React.Fragment>\n\t\t\t        \t<Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n\t\t\t        \t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t          \t<Nav className=\"ml-auto \">\n\t\t\t\t          \t\t<LinkContainer to=\"/dev\">\n\t\t\t\t              \t\t<NavItem>DEV</NavItem>\n\t\t\t\t            \t</LinkContainer>\n\t\t\t\t            \t<LinkContainer to=\"/sit\">\n\t\t\t\t              \t\t<NavItem>SIT</NavItem>\n\t\t\t\t            \t</LinkContainer>\n\t\t\t\t            \t<LinkContainer to=\"/uat\">\n\t\t\t\t              \t\t<NavItem>UAT</NavItem>\n\t\t\t\t            \t</LinkContainer>\n\t\t\t\t        \t</Nav>\n\t\t\t\t        </Navbar.Collapse>\n\t\t        \t</React.Fragment> \t\n\t\t      </Navbar>\n\t\t    </header>\n\t)  ;\n}\n  \n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport '../../styles/MenuHeader.css';\n\n\nconst MenuHeader = ( { name , icon } ) =>  {\n\t\n\treturn (\n\t\t\t<div className=\"menu-header\">\n\t\t\t\t<FontAwesomeIcon icon={icon} />\n    \t\t\t<span className=\"menu-name\">{name}</span>\n\t\t\t</div>\n\t)  ;\n}\n  \nMenuHeader.propTypes = {\n\tname:  PropTypes.string.isRequired,\n\ticon:  PropTypes.string.isRequired\n}\n\nexport default MenuHeader;","/* eslint-disable jsx-a11y/label-has-for */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"react-tabulator/lib/styles.css\";\r\nimport \"react-tabulator/css/bootstrap/tabulator_bootstrap.min.css\";\r\nimport { ReactTabulator } from \"react-tabulator\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { CSVLink } from \"react-csv\";\r\nimport '../../styles/Table.css';\r\n\r\n\r\nclass Table extends Component {\r\n\r\n\tref = null;\r\n\r\n\trender() {\r\n\r\n\t\tconst { data=[], config={}} = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"above-table-container\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label className=\"data-count\">\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon=\"hashtag\" /> {data.length}\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<CSVLink data={data} className=\"download\" title=\"Download the table data in CSV format.\">\r\n\t\t\t\t\t\t\tDownload CSV\r\n\t\t\t\t\t\t</CSVLink>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ReactTabulator\r\n\t\t\t\t  /* eslint-disable-next-line no-return-assign */\r\n\t\t          ref={ref => (this.ref = ref)}\r\n\t\t          columns={config.columns}\r\n\t\t          data={data}\r\n\t\t          options={config.options}\r\n\t\t          data-custom-attr=\"test-custom-attribute\"\r\n\t\t          className=\"custom-css-class\"\r\n\t\t        />\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t);\r\n\t}\r\n}\r\n\r\nTable.propTypes = {\r\n\tdata: PropTypes.instanceOf(Array).isRequired,\r\n\tconfig: PropTypes.shape({ subProp: PropTypes.object }).isRequired\r\n}\r\n\r\nexport default Table;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport '../../styles/StackedHorizontalBarChart.css';\r\n\r\nconst width = 800;\r\nconst height = 200;\r\n\r\nconst StackedHorizontalBarChart = (props) => {\r\n\r\n\t\tconst { data, config } = props;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"chart-container\">\r\n\t\t\t\t<BarChart width={width} height={height} \r\n\t\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\t\tlayout=\"vertical\"\r\n\t\t\t\t\t\t\tstackOffset={config.stackOffset}\r\n\t\t            \t\tmargin={{top: 20, right: 10, left: 50, bottom: 10}}>\r\n\t\t       <CartesianGrid strokeDasharray=\"3 3\"/>\r\n\t\t       <XAxis type=\"number\" dataKey={config.dataKey.xaxis}/>\r\n\t\t       <YAxis type=\"category\" dataKey={config.dataKey.yaxis}/>\r\n\t\t       <Tooltip/>\r\n\t\t       <Legend />\r\n\t\t       <Bar dataKey={config.dataKey.lowerbar} stackId=\"a\" fill=\"#16174f\" />\r\n\t\t       <Bar dataKey={config.dataKey.upperbar} stackId=\"a\" fill=\"#c43235\" />\r\n\t\t      </BarChart>\r\n\t\t\t</div>\r\n\t\t);\r\n}\r\n\r\nStackedHorizontalBarChart.propTypes = {\r\n\tdata: PropTypes.instanceOf(Array).isRequired,\r\n\tconfig: PropTypes.shape({ subProp: PropTypes.object }).isRequired\r\n}\r\n\r\n\r\nexport default StackedHorizontalBarChart;","export const OverallTableConfig = {\r\n\t\r\n\tcolumns : \t[\r\n\t\t\t\t  { title: \"ID\", field: \"requestId\", width: 180 },\r\n\t\t\t\t  { title: \"Service\", field: \"service\", width: 250},\r\n\t\t\t\t  { title: \"Operation\", field: \"operation\", width: 250},\r\n\t\t\t\t  { title: \"Result\", field: \"result\", width: 180, formatter: \"tickCross\"},\r\n                  { title: \"Time SLA\", field: \"timeSLA\", width: 180,  formatter: \"tickCross\"},\r\n                  { title: \"Time (ms)\", field: \"time\", width: 180},\r\n\t\t\t\t  { title: \"Error Code\", field: \"errorCode\", width: 180},\r\n                  { title: \"Error Message\", field: \"errorMessage\", width: 350},\r\n                  { title: \"Endpoint\", field: \"endpoint\", width: 1250}\r\n\t\t\t\t],\r\n\toptions : {\r\n\t\t\t\tmovableRows: true,\r\n\t\t  \t\tpagination:\"local\",\r\n\t\t  \t\tpaginationSize: 20\r\n\t}\r\n\r\n};\r\n\r\nexport const ServiceAveragesTableConfig = {\r\n\t\r\n\tcolumns : \t[\r\n\t\t\t\t  { title: \"Service\", field: \"service\", width: 250},\r\n\t\t\t\t  { title: \"Operation #\", field: \"countOperation\", width: 160},\r\n\t\t\t\t  { title: \"Request #\", field: \"countRequests\", width: 160},\r\n                  { title: \"Success #\", field: \"countSuccess\", width: 160},\r\n\t\t\t\t  { title: \"Failure #\", field: \"countFailure\", width: 160},\r\n\t\t\t\t  { title: \"SLA Failure #\", field: \"countSLAFailure\", width: 160},\r\n                  { title: \"Avg. Time (ms)\", field: \"avgTime\", width: 180},\r\n\t\t\t\t  { title: \"Highest Time (ms)\", field: \"highTime\", width: 180},\r\n\t\t\t\t  { title: \"Lowest Time (ms)\", field: \"lowTime\", width: 180}\r\n\t\t\t\t]\r\n\r\n};\r\n\r\nexport const OperationsAveragesTableConfig = {\r\n\t\r\n\tcolumns : \t[\r\n\t\t\t\t  { title: \"Operation\", field: \"operation\", width: 290},\r\n\t\t\t\t  { title: \"Request #\", field: \"countRequests\", width: 160},\r\n                  { title: \"Success #\", field: \"countSuccess\", width: 160},\r\n\t\t\t\t  { title: \"Failure #\", field: \"countFailure\", width: 160},\r\n\t\t\t\t  { title: \"SLA Failure #\", field: \"countSLAFailure\", width: 160},\r\n                  { title: \"Avg. Time (ms)\", field: \"avgTime\", width: 180},\r\n\t\t\t\t  { title: \"Highest Time (ms)\", field: \"highTime\", width: 180},\r\n\t\t\t\t  { title: \"Lowest Time (ms)\", field: \"lowTime\", width: 180}\r\n\t\t\t\t]\r\n\r\n};\r\n\r\n\r\n\r\n","export const ChartConfig = {\r\n\t\r\n\tstackOffset: 'none',\r\n\tdataKey : \t{\r\n\t\t\t\t\txaxis: '',\r\n\t\t\t\t\tyaxis: 'testName',\r\n\t\t\t\t\tlowerbar: 'success',\r\n\t\t\t\t\tupperbar: 'failure'\r\n\t\t\t\t}\r\n\r\n};\r\n\r\n\r\nexport const abc=1;","import React from 'react';\r\nimport PropTypes  from 'prop-types';\r\nimport MenuHeader from '../layouts/MenuHeader';\r\nimport Table from '../display/Table';\r\nimport StackedHorizontalBarChart from '../display/StackedHorizontalBarChart';\r\nimport { OverallTableConfig, ServiceAveragesTableConfig } from '../../constants/tableConfig';\r\nimport { ChartConfig } from '../../constants/chartConfig';\r\nimport '../../styles/OverallPage.css';\r\n\r\nconst OverallPage = (props) => {\r\n\r\n    const { overallData, overallChartData, serviceAverages } = props.data;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <MenuHeader name=\"Overall\" icon=\"columns\" />\r\n            <div className=\"content\">\r\n                <div className=\"stats-container\">\r\n                    <div className=\"flex-container\">\r\n                        <div>\r\n                            <span className=\"label overall-metric\">Expected Response</span>\r\n                            <span className=\"label emphasis overall-metric\">HTTP 200</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"label overall-metric\">Estimated SLA</span>\r\n                            <span className=\"label emphasis overall-metric\">4000 ms</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex-container\">\r\n                        <div>\r\n                            <span className=\"label\">Total Requests</span>\r\n                            <span className=\"label emphasis\">10000</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"label\">Runtime errors</span>\r\n                            <span className=\"label emphasis\">2</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"label\">Fatal errors</span>\r\n                            <span className=\"label emphasis\">0</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"label\">Success #</span>\r\n                            <span className=\"label emphasis\">5000</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"label\">Failure #</span>\r\n                            <span className=\"label emphasis\">5000</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"label\">Success %</span>\r\n                            <span className=\"label emphasis\">50%</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"label\">Failure %</span>\r\n                            <span className=\"label emphasis\">50%</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"label\">Average Time (ms)</span>\r\n                            <span className=\"label emphasis\">400ms</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"label\">Delayed Responses #</span>\r\n                            <span className=\"label emphasis\">40</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"label\">Timely Responses #</span>\r\n                            <span className=\"label emphasis\">80</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"label\">Response % exceeding SLA</span>\r\n                            <span className=\"label emphasis\">20%</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container-fluid mt-4\">\r\n                    <div className=\"section-header\">Smoke Tests</div>\r\n                    <Table data={overallData} config={OverallTableConfig}/>\r\n                </div>\r\n                <div className=\"container-fluid mt-4\">\r\n                    <StackedHorizontalBarChart data={overallChartData} config={ChartConfig}/>\r\n                </div>\r\n                <div className=\"container-fluid mt-4\">\r\n                    <div className=\"section-header\">Service Averages</div>\r\n                    <Table data={serviceAverages} config={ServiceAveragesTableConfig}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nOverallPage.propTypes = {\r\n    data: PropTypes.shape({ subProp: PropTypes.array }).isRequired\r\n}\r\n\r\nexport default OverallPage;","import React from 'react';\r\nimport Table from '../display/Table';\r\nimport StackedHorizontalBarChart from '../display/StackedHorizontalBarChart';\r\nimport { OperationsAveragesTableConfig } from '../../constants/tableConfig';\r\nimport { ChartConfig } from '../../constants/chartConfig';\r\nimport '../../styles/IndividualServicePage.css';\r\n\r\nconst IndividualServicePage = ( ) => {\r\n\r\n    const name = \"Accounts Payable\";\r\n    const chartData = [\r\n        {\r\n            testName: 'HTTP 200', success: 40, failure: 10\r\n        },\r\n        {\r\n            testName: 'Estimated SLA', success: 35, failure: 15\r\n        }\r\n    ];\r\n    const operationAverages = [\r\n        { \r\n            operation: 'GetPassThruAccountDetails', \r\n            countOperation: 4,\r\n            countRequests: 100,\r\n            countSuccess: 45,\r\n            countFailure: 55,\r\n            countSLAFailure: 10,\r\n            avgTime: 4000,\r\n            highTime: 6000,\r\n            lowTime: 2300\r\n        },\r\n        { \r\n            operation: 'GetPassThruAccountDetails',  \r\n            countOperation: 4,\r\n            countRequests: 100,\r\n            countSuccess: 45,\r\n            countFailure: 55,\r\n            countSLAFailure: 10,\r\n            avgTime: 4000,\r\n            highTime: 6000,\r\n            lowTime: 2300\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"service-name-label\">{name}</div>\r\n            <div className=\"content\">\r\n                <div className=\"stats-container\">\r\n                    <div className=\"flex-container\">\r\n                        <div>\r\n                            <span className=\"label\">Total Requests</span>\r\n                            <span className=\"label emphasis\">10000</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"label\">Operations #</span>\r\n                            <span className=\"label emphasis\">10</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"label\">Runtime errors</span>\r\n                            <span className=\"label emphasis\">2</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"label\">Fatal errors</span>\r\n                            <span className=\"label emphasis\">0</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"label\">Success #</span>\r\n                            <span className=\"label emphasis\">5000</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"label\">Failure #</span>\r\n                            <span className=\"label emphasis\">5000</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"label\">Success %</span>\r\n                            <span className=\"label emphasis\">50%</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"label\">Failure %</span>\r\n                            <span className=\"label emphasis\">50%</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"label\">Highest Time (ms)</span>\r\n                            <span className=\"label emphasis\">400ms</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"label\">Lowest Time (ms)</span>\r\n                            <span className=\"label emphasis\">400ms</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"label\">Average Time</span>\r\n                            <span className=\"label emphasis\">400ms</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"label\">Delayed Responses #</span>\r\n                            <span className=\"label emphasis\">40</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"label\">Timely Responses #</span>\r\n                            <span className=\"label emphasis\">80</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"label\">Response % exceeding SLA</span>\r\n                            <span className=\"label emphasis\">20%</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container-fluid mt-4\">\r\n                    <StackedHorizontalBarChart data={chartData} config={ChartConfig}/>\r\n                </div>\r\n                <div className=\"container-fluid mt-4\">\r\n                    <div className=\"section-header\">Operation Averages</div>\r\n                    <Table data={operationAverages} config={OperationsAveragesTableConfig}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IndividualServicePage;","import React from 'react';\r\nimport MenuHeader from '../layouts/MenuHeader';\r\nimport '../../styles/ServicePage.css';\r\nimport IndividualServicePage from './IndividualServicePage';\r\n\r\nconst ServicePage = () => {\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <MenuHeader name=\"Services\" icon=\"cogs\" />\r\n            <div className=\"content\">\r\n                <IndividualServicePage />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ServicePage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport OverallPage from './OverallPage';\nimport ServicePage from './ServicePage';\n\n\nconst ContentPage = (props) => {\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<OverallPage data={props.data}/>\t\n\t\t\t<ServicePage data={props.data}/>\n\t\t</div>\n\t\t);\n}\n\nContentPage.propTypes = {\n\tdata: PropTypes.shape({ subProp: PropTypes.array }).isRequired\n}\n\nexport default ContentPage;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport './styles/App.css';\nimport Header from './components/layouts/Header';\nimport ContentPage from './components/pages/ContentPage';\n\nconst appData = {\n\n    dev : {\n        overallData:  [\n            {\n                requestId: 'Request1',\n                service: 'Accounts Payable',\n                operation: 'GetPassThruAccounts',\n                endpoint: 'https://dev-ils.wellsfargo.net/json/get/getPassThru/900890876',\n                time: 4000,\n                result: true,\n                timeSLA: false,\n                errorCode: 'WS7777',\n                errorMessage: 'Invalid User Id'\n            },\n            {\n                requestId: 'Request1',\n                service: 'Accounts Payable',\n                operation: 'GetPassThruAccounts',\n                endpoint: 'https://dev-ils.wellsfargo.net/json/get/getPassThru/900890876',\n                time: 4000,\n                result: false,\n                timeSLA: true,\n                errorCode: 'WS7777',\n                errorMessage: 'Invalid User Id'\n            }\n        ],\n        overallChartData: [\n            {\n                testName: 'HTTP 200', success: 40, failure: 10\n            },\n            {\n                testName: 'Estimated SLA', success: 35, failure: 15\n            }\n        ],\n        serviceAverages: [\n            { \n                service: 'Accounts Payable', \n                countOperation: 4,\n                countRequests: 100,\n                countSuccess: 45,\n                countFailure: 55,\n                countSLAFailure: 10,\n                avgTime: 4000,\n                highTime: 6000,\n                lowTime: 2300\n            },\n            { \n                service: 'Accounts Payable', \n                countOperation: 4,\n                countRequests: 100,\n                countSuccess: 45,\n                countFailure: 55,\n                countSLAFailure: 10,\n                avgTime: 4000,\n                highTime: 6000,\n                lowTime: 2300\n            }\n        ]\n    },\n\n    sit: {\n        overallData:  [\n            {\n                requestId: 'Request1',\n                service: 'Accounts Payable',\n                operation: 'GetPassThruAccounts',\n                endpoint: 'https://sit-ils.wellsfargo.net/json/get/getPassThru/900890876',\n                time: 4000,\n                result: true,\n                timeSLA: false,\n                errorCode: 'WS7777',\n                errorMessage: 'Invalid User Id'\n            },\n            {\n                requestId: 'Request1',\n                service: 'Accounts Payable',\n                operation: 'GetPassThruAccounts',\n                endpoint: 'https://sit-ils.wellsfargo.net/json/get/getPassThru/900890876',\n                time: 4000,\n                result: false,\n                timeSLA: true,\n                errorCode: 'WS7777',\n                errorMessage: 'Invalid User Id'\n            }\n        ],\n        overallChartData: [\n            {\n                testName: 'HTTP 200', success: 40, failure: 10\n            },\n            {\n                testName: 'Estimated SLA', success: 35, failure: 15\n            }\n        ],\n        serviceAverages: [\n            { \n                service: 'Accounts Payable', \n                countOperation: 4,\n                countRequests: 100,\n                countSuccess: 45,\n                countFailure: 55,\n                countSLAFailure: 10,\n                avgTime: 4000,\n                highTime: 6000,\n                lowTime: 2300\n            },\n            { \n                service: 'Accounts Payable', \n                countOperation: 4,\n                countRequests: 100,\n                countSuccess: 45,\n                countFailure: 55,\n                countSLAFailure: 10,\n                avgTime: 4000,\n                highTime: 6000,\n                lowTime: 2300\n            }\n        ]\n    },\n\n    uat: {\n        overallData:  [\n            {\n                requestId: 'Request1',\n                service: 'Accounts Payable',\n                operation: 'GetPassThruAccounts',\n                endpoint: 'https://uat-ils.wellsfargo.net/json/get/getPassThru/900890876',\n                time: 4000,\n                result: true,\n                timeSLA: false,\n                errorCode: 'WS7777',\n                errorMessage: 'Invalid User Id'\n            },\n            {\n                requestId: 'Request1',\n                service: 'Accounts Payable',\n                operation: 'GetPassThruAccounts',\n                endpoint: 'https://uat-ils.wellsfargo.net/json/get/getPassThru/900890876',\n                time: 4000,\n                result: false,\n                timeSLA: true,\n                errorCode: 'WS7777',\n                errorMessage: 'Invalid User Id'\n            }\n        ],\n        overallChartData: [\n            {\n                testName: 'HTTP 200', success: 40, failure: 10\n            },\n            {\n                testName: 'Estimated SLA', success: 35, failure: 15\n            }\n        ],\n        serviceAverages: [\n            { \n                service: 'Accounts Payable', \n                countOperation: 4,\n                countRequests: 100,\n                countSuccess: 45,\n                countFailure: 55,\n                countSLAFailure: 10,\n                avgTime: 4000,\n                highTime: 6000,\n                lowTime: 2300\n            },\n            { \n                service: 'Accounts Payable', \n                countOperation: 4,\n                countRequests: 100,\n                countSuccess: 45,\n                countFailure: 55,\n                countSLAFailure: 10,\n                avgTime: 4000,\n                highTime: 6000,\n                lowTime: 2300\n            }\n        ]\n    }\n};\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tdata: appData\n\t\t}\n\t}\n\n\trender() {\n\n\t\tconst { data } = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"\">\n\t\t      <Router>\n\t\t      \t\t<Header />\n\t\t      \t\t<Switch>\n\t\t\t\t\t  \t<Route path=\"/dev\" exact render={( props ) => <ContentPage {...props} data={data.dev} />} />\n\t\t\t\t\t\t<Route path=\"/sit\" exact render={( props ) => <ContentPage {...props} data={data.sit} />} />\n\t\t\t\t\t\t<Route path=\"/uat\" exact render={( props ) => <ContentPage {...props} data={data.uat} />} />\n\t\t\t\t\t\t<Redirect to=\"/dev\" />\n\t\t      \t\t </Switch>\n\t\t      </Router>\n\t\t    </div>\n\t\t);\n\t}\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { library } from '@fortawesome/fontawesome-svg-core';\n// eslint-disable-next-line no-unused-vars\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { \n\t\tfaColumns,\n\t\tfaCogs,\n\t\tfaHashtag\n\t } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faColumns);\nlibrary.add(faCogs);\nlibrary.add(faHashtag);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './utils/iconUtils';\n\nReactDOM.render(\n\t<App />, \n\tdocument.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}